# -*- coding: utf-8 -*-
"""streamlit_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L-9jIJFIXsv1eX7J5S8ly6BQ18EyrIUF
"""

import streamlit as st
import pickle
import numpy as np
from typing import Any

# ======================
# Load the trained model
# ======================
@st.cache_resource
def load_model(path: str = "house_price_model (1).pkl") -> Any:
    """Load and cache the trained house price prediction model."""
    with open(path, "rb") as file:
        model = pickle.load(file)
    return model

model = load_model()

# ======================
# Streamlit App Layout
# ======================
st.set_page_config(
    page_title="California House Price Prediction",
    page_icon="🏡",
    layout="centered"
)

st.title("🏡 California House Price Prediction")
st.markdown(
    """
    This application predicts the **Median House Value** in California
    based on features such as *income, rooms, population, and location*.
    ---
    """
)

def get_user_input() -> np.ndarray:
    """Render input form and return user inputs as a numpy array."""
    with st.form("prediction_form"):
        col1, col2 = st.columns(2)

        with col1:
            longitude = st.number_input("🌍 Longitude", step=0.01, format="%.4f")
            latitude = st.number_input("📍 Latitude", step=0.01, format="%.4f")
            housing_median_age = st.number_input("🏠 Housing Median Age", min_value=0.0, step=1.0, format="%.1f")
            median_income = st.number_input("💰 Median Income", min_value=0.0, step=0.1, format="%.2f")

        with col2:
            total_rooms = st.number_input("🚪 Total Rooms", min_value=0, step=1)
            total_bedrooms = st.number_input("🛏️ Total Bedrooms", min_value=0, step=1)
            population = st.number_input("👨‍👩‍👧 Population", min_value=0, step=1)
            households = st.number_input("🏘️ Households", min_value=0, step=1)

        submitted = st.form_submit_button("🔮 Predict Price")

        if submitted:
            features = np.array([[
                longitude,
                latitude,
                housing_median_age,
                total_rooms,
                total_bedrooms,
                population,
                households,
                median_income
            ]])
            return features
        return None

def main() -> None:
    """Main function to run the Streamlit app."""
    features = get_user_input()
    if features is not None:
        prediction = model.predict(features)
        st.success(f"🏠 **Estimated House Price:** ${prediction[0]:,.2f}")

if __name__ == "__main__":
    main()